
------------------------------------------------------

Part 4 - Writing Shell Scripts

------------------------------------------------------

Chapter 24 - Writing Your First Script

Shell script starts with shebang.
They should be readable and executable.
Scripts are usually located in 'bin' directory.

------------------------------------------------------

Chapter 25 - Starting a Project

'declare -r TITLE="Page Title"' - constant
'declare -i NUMBER=12' - integer

Variables contain values.
Constants are denoted by uppercase letters.
Text can be output using 'echo' command or here document.

------------------------------------------------------

Chapter 26 - Top-Down Design

Shell functions can be defined in script or '.bashrc' file.
Local variables are visible only inside subroutines.
Global variables exist throughout the program.

------------------------------------------------------

Chapter 27 - Flow Control: Branching with if

Branching is possible with 'if' statement.
Exit status indicates success or failure of command.
The 'test' command appears in two forms.
Logical operators:
  - AND
  - OR
  - NOT
Compound commands:
  modern test - '[[ ]]'
  integers - '(( ))'

------------------------------------------------------

Chapter 28 - Reading Keyboard Input

Data from standard input can be read with 'read' command.
By default, output returned by 'read' is stored in 'REPLY'.
Variable 'IFS' specifies which character is treated as separator.

------------------------------------------------------

Chapter 29 - Flow Control: Looping with while / until

Loops allow to perform actions multiple times.
Two common types of loops are 'while' and 'until'.
The 'continue' function allows programmer to skip rest of loop.
To exit loop one can use 'break' command.

------------------------------------------------------

Chapter 30 - Troubleshooting

The most common syntactic errors are missing parentheses and tokens.
Another type of errors are those related to expansion.
Even if program works, it may contain logical errors.
It is good practice to enclose variables in double quotes.
Testing and debugging helps create robust software.

------------------------------------------------------

Chapter 31 - Flow Control: Branching with case

------------------------------------------------------

Chapter 32 - Positional Parameters

------------------------------------------------------

Chapter 33 - Flow Control: Looping with for

------------------------------------------------------

Chapter 34 - Strings and Numbers

------------------------------------------------------

Chapter 35 - Arrays

------------------------------------------------------

Chapter 36 - Exotica

------------------------------------------------------

